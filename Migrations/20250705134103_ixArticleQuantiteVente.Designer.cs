// <auto-generated />
using System;
using CaissePoly.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaissePoly.Migrations
{
    [DbContext(typeof(CDBContext))]
    [Migration("20250705134103_ixArticleQuantiteVente")]
    partial class ixArticleQuantiteVente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CaissePoly.Model.Article", b =>
                {
                    b.Property<int>("idA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idA"));

                    b.Property<string>("codeabare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idF")
                        .HasColumnType("int");

                    b.Property<decimal>("prixunitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("quantiteStock")
                        .HasColumnType("int");

                    b.Property<int>("quantiteVente")
                        .HasColumnType("int");

                    b.HasKey("idA");

                    b.HasIndex("idF");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("CaissePoly.Model.Famille", b =>
                {
                    b.Property<int>("idF")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idF"));

                    b.Property<string>("nomF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idF");

                    b.ToTable("Famille");
                });

            modelBuilder.Entity("CaissePoly.Model.Utilisateur", b =>
                {
                    b.Property<int>("idU")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idU"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idU");

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("Ticket", b =>
                {
                    b.Property<int>("IdT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdT"));

                    b.Property<DateTime>("DateTicket")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModePaiement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdT");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Vente", b =>
                {
                    b.Property<int>("IdV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdV"));

                    b.Property<int?>("ArticleidA")
                        .HasColumnType("int");

                    b.Property<int>("IdA")
                        .HasColumnType("int");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int?>("TicketIdT")
                        .HasColumnType("int");

                    b.Property<int?>("UtilisateuridU")
                        .HasColumnType("int");

                    b.HasKey("IdV");

                    b.HasIndex("ArticleidA");

                    b.HasIndex("TicketIdT");

                    b.HasIndex("UtilisateuridU");

                    b.ToTable("Vente");
                });

            modelBuilder.Entity("CaissePoly.Model.Article", b =>
                {
                    b.HasOne("CaissePoly.Model.Famille", "famille")
                        .WithMany("Article")
                        .HasForeignKey("idF");

                    b.Navigation("famille");
                });

            modelBuilder.Entity("Vente", b =>
                {
                    b.HasOne("CaissePoly.Model.Article", null)
                        .WithMany("Vente")
                        .HasForeignKey("ArticleidA");

                    b.HasOne("Ticket", null)
                        .WithMany("Ventes")
                        .HasForeignKey("TicketIdT");

                    b.HasOne("CaissePoly.Model.Utilisateur", null)
                        .WithMany("Vente")
                        .HasForeignKey("UtilisateuridU");
                });

            modelBuilder.Entity("CaissePoly.Model.Article", b =>
                {
                    b.Navigation("Vente");
                });

            modelBuilder.Entity("CaissePoly.Model.Famille", b =>
                {
                    b.Navigation("Article");
                });

            modelBuilder.Entity("CaissePoly.Model.Utilisateur", b =>
                {
                    b.Navigation("Vente");
                });

            modelBuilder.Entity("Ticket", b =>
                {
                    b.Navigation("Ventes");
                });
#pragma warning restore 612, 618
        }
    }
}
